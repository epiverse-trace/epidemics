% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/epidemic_cpp.R
\name{epidemic_cpp}
\alias{epidemic_cpp}
\title{Model an SEIR epidemic}
\usage{
epidemic_cpp(
  population,
  r0 = 1.5,
  preinfectious_period = 3,
  infectious_period = 7,
  time_end = 200,
  increment = 1
)
}
\arguments{
\item{population}{An object of the \code{population} class, which holds a
population contact matrix, a demography vector, and the initial conditions
of each demographic group. See \code{\link[=population]{population()}}.}

\item{r0}{The reproductive number of the infection. Must be a vector of the
same length as the number of demographic groups.}

\item{preinfectious_period}{The mean infections period. Must be a vector
of the same length as the number of demographic groups.}

\item{infectious_period}{The mean infections period. Must be a vector of the
same length as the number of demographic groups.}

\item{time_end}{The maximum number of timesteps over which to run the model.}

\item{increment}{The size of the time increment.}
}
\value{
A \code{data.frame} with the columns "time", "compartment", "age_group",
"value". The comparments are "susceptible", "exposed", "infectious", and
"recovered".
}
\description{
Function for a deterministic susceptible-infectious-recovered
model with an optional vaccination component.
Allows heterogeneity in social contact patterns, the demography distribution,
and key epidemiological parameters: the reproductive number \eqn{R_0}, and
the infectious period \eqn{1/\gamma}.
Also allows for group-specific initial proportions in each model compartment,
as well as group-specific vaccination start dates and vaccination rates.
}
\examples{
# create a population
population <- population(
  name = "UK population",
  contact_matrix = matrix(1),
  demography_vector = 67e6,
  initial_conditions = matrix(
    c(0.9999, 0.0001, 0, 0),
    nrow = 1, ncol = 4
  )
)

# run epidemic simulation
epidemic_cpp(
  population = population,
  r0 = rep(1.5, nrow(population$contact_matrix)),
  preinfectious_period = rep(3, nrow(population$contact_matrix)),
  infectious_period = rep(7, nrow(population$contact_matrix)),
  time_end = 200,
  increment = 1
)
}
