// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include "../inst/include/epidemics.h"
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// epidemic_default_cpp
Rcpp::List epidemic_default_cpp(const Rcpp::NumericVector& init, const float& beta, const float& gamma);
RcppExport SEXP _epidemics_epidemic_default_cpp(SEXP initSEXP, SEXP betaSEXP, SEXP gammaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type init(initSEXP);
    Rcpp::traits::input_parameter< const float& >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< const float& >::type gamma(gammaSEXP);
    rcpp_result_gen = Rcpp::wrap(epidemic_default_cpp(init, beta, gamma));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_epidemics_epidemic_default_cpp", (DL_FUNC) &_epidemics_epidemic_default_cpp, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_epidemics(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
